<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.GoodMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.Good" >
    <id column="goodid" property="goodid" jdbcType="INTEGER" />
    <result column="imgUrl" property="imgurl" jdbcType="VARCHAR" />
    <result column="goodname" property="goodname" jdbcType="VARCHAR" />
    <result column="goodinfo" property="goodinfo" jdbcType="VARCHAR" />
    <result column="goodprice" property="goodprice" jdbcType="DOUBLE" />
    <result column="good_content" property="goodContent" jdbcType="VARCHAR" />
    <result column="classifyid" property="classifyid" jdbcType="INTEGER" />
    <result column="firstimgUrl" property="firstimgurl" jdbcType="VARCHAR" />
    <result column="totalcount" property="totalcount" jdbcType="INTEGER" />
    <result column="rest" property="rest" jdbcType="INTEGER" />
    <result column="seld" property="seld" jdbcType="INTEGER" />
    <result column="publisherid" property="publisherid" jdbcType="INTEGER" />
    <result column="goodstate" property="goodstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    goodid, imgUrl, goodname, goodinfo, goodprice, good_content, classifyid, firstimgUrl, 
    totalcount, rest, seld, publisherid, goodstate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from j_good
    where goodid = #{goodid,jdbcType=INTEGER} and goodstate = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from j_good
    where goodid = #{goodid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.model.Good" useGeneratedKeys="true" keyProperty="goodid" keyColumn="goodid">
    insert into j_good (goodid, imgUrl, goodname, 
      goodinfo, goodprice, good_content, 
      classifyid, firstimgUrl, totalcount, 
      rest, seld, publisherid, 
      goodstate)
    values (#{goodid,jdbcType=INTEGER}, #{imgurl,jdbcType=VARCHAR}, #{goodname,jdbcType=VARCHAR}, 
      #{goodinfo,jdbcType=VARCHAR}, #{goodprice,jdbcType=DOUBLE}, #{goodContent,jdbcType=VARCHAR}, 
      #{classifyid,jdbcType=INTEGER}, #{firstimgurl,jdbcType=VARCHAR}, #{totalcount,jdbcType=INTEGER}, 
      #{rest,jdbcType=INTEGER}, #{seld,jdbcType=INTEGER}, #{publisherid,jdbcType=INTEGER}, 
      #{goodstate,jdbcType=INTEGER})
    <!-- 返回主键 mysql的配置形式，order属性不同的数据库不同 -->
    <selectKey keyColumn="goodid" resultType="int" keyProperty="goodid" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Good" >
    insert into j_good
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodid != null" >
        goodid,
      </if>
      <if test="imgurl != null" >
        imgUrl,
      </if>
      <if test="goodname != null" >
        goodname,
      </if>
      <if test="goodinfo != null" >
        goodinfo,
      </if>
      <if test="goodprice != null" >
        goodprice,
      </if>
      <if test="goodContent != null" >
        good_content,
      </if>
      <if test="classifyid != null" >
        classifyid,
      </if>
      <if test="firstimgurl != null" >
        firstimgUrl,
      </if>
      <if test="totalcount != null" >
        totalcount,
      </if>
      <if test="rest != null" >
        rest,
      </if>
      <if test="seld != null" >
        seld,
      </if>
      <if test="publisherid != null" >
        publisherid,
      </if>
      <if test="goodstate != null" >
        goodstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodid != null" >
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null" >
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="goodname != null" >
        #{goodname,jdbcType=VARCHAR},
      </if>
      <if test="goodinfo != null" >
        #{goodinfo,jdbcType=VARCHAR},
      </if>
      <if test="goodprice != null" >
        #{goodprice,jdbcType=DOUBLE},
      </if>
      <if test="goodContent != null" >
        #{goodContent,jdbcType=VARCHAR},
      </if>
      <if test="classifyid != null" >
        #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="firstimgurl != null" >
        #{firstimgurl,jdbcType=VARCHAR},
      </if>
      <if test="totalcount != null" >
        #{totalcount,jdbcType=INTEGER},
      </if>
      <if test="rest != null" >
        #{rest,jdbcType=INTEGER},
      </if>
      <if test="seld != null" >
        #{seld,jdbcType=INTEGER},
      </if>
      <if test="publisherid != null" >
        #{publisherid,jdbcType=INTEGER},
      </if>
      <if test="goodstate != null" >
        #{goodstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Good" >
    update j_good
    <set >
      <if test="imgurl != null" >
        imgUrl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="goodname != null" >
        goodname = #{goodname,jdbcType=VARCHAR},
      </if>
      <if test="goodinfo != null" >
        goodinfo = #{goodinfo,jdbcType=VARCHAR},
      </if>
      <if test="goodprice != null" >
        goodprice = #{goodprice,jdbcType=DOUBLE},
      </if>
      <if test="goodContent != null" >
        good_content = #{goodContent,jdbcType=VARCHAR},
      </if>
      <if test="classifyid != null" >
        classifyid = #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="firstimgurl != null" >
        firstimgUrl = #{firstimgurl,jdbcType=VARCHAR},
      </if>
      <if test="totalcount != null" >
        totalcount = #{totalcount,jdbcType=INTEGER},
      </if>
      <if test="rest != null" >
        rest = #{rest,jdbcType=INTEGER},
      </if>
      <if test="seld != null" >
        seld = #{seld,jdbcType=INTEGER},
      </if>
      <if test="publisherid != null" >
        publisherid = #{publisherid,jdbcType=INTEGER},
      </if>
      <if test="goodstate != null" >
        goodstate = #{goodstate,jdbcType=INTEGER},
      </if>
    </set>
    where goodid = #{goodid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Good" >
    update j_good
    set imgUrl = #{imgurl,jdbcType=VARCHAR},
      goodname = #{goodname,jdbcType=VARCHAR},
      goodinfo = #{goodinfo,jdbcType=VARCHAR},
      goodprice = #{goodprice,jdbcType=DOUBLE},
      good_content = #{goodContent,jdbcType=VARCHAR},
      classifyid = #{classifyid,jdbcType=INTEGER},
      firstimgUrl = #{firstimgurl,jdbcType=VARCHAR},
      totalcount = #{totalcount,jdbcType=INTEGER},
      rest = #{rest,jdbcType=INTEGER},
      seld = #{seld,jdbcType=INTEGER},
      publisherid = #{publisherid,jdbcType=INTEGER},
      goodstate = #{goodstate,jdbcType=INTEGER}
    where goodid = #{goodid,jdbcType=INTEGER}
  </update>
  <select id="selectAllGood" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from j_good where goodstate = 1 order by goodprice
  </select>
  <resultMap id="classifygoods" type="com.example.model.ClassifyGood">
    <id property="classifyname" column="classifyname"></id>
    <collection property="goodList" ofType="com.example.model.Good">
      <result property="goodid" column="goodid" />
      <result property="goodname" column="goodname" />
      <result property="firstimgurl" column="firstimgUrl" />
    </collection>
  </resultMap>
  <select id="findClassifyGoods" resultMap="classifygoods">
    SELECT g.goodid,g.goodname,g.firstimgUrl,c.classifyname
FROM j_good as g,j_classify as c where g.classifyid = c.classifyid and g.goodstate = 1
group BY c.classifyname,g.goodid
  </select>
  <select id="queryByGoodname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from j_good
    where goodname like "%"#{goodname,jdbcType=VARCHAR}"%" and goodstate = 1
  </select>
  <select id="queryByClassifyname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select g.goodid,g.goodname,g.goodinfo,g.goodprice,g.firstimgUrl from j_good as g,j_classify as c where g.classifyid = c.classifyid and c.classifyname = #{classifyname,jdbcType=VARCHAR} and g.goodstate = 1
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from j_good
    where goodid = #{goodid,jdbcType=INTEGER}
  </select>
  <select id="getuseridbygoodid" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select publisherid
    from j_good
    where goodid = #{goodid,jdbcType=INTEGER}
  </select>
  <select id="findallshenhegood" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from j_good
    where goodstate = 2
  </select>
  <update id="permitgood" parameterType="java.lang.Integer" >
    update j_good
    set
      goodstate = 1
    where goodid = #{goodid,jdbcType=INTEGER}
  </update>
</mapper>